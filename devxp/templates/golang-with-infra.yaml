apiVersion: scaffolder.backstage.io/v1beta3
kind: Template
metadata:
  name: create-go-infra-app-template
  title: Golang Website with Infra
  description: Create a new GoLang App and Infrastructure
  tags:
    - go
    - golang
    - infrastructure
    - recommended
    - website
spec:
  owner: group:engineering
  type: website

  parameters:
    - title: Provide some simple information
      required:
        - component_id
        - system
        - lifecycle
        - owner
        - type
      properties:
        component_id:
          title: Name
          type: string
          description: Unique name of the component
          ui:field: EntityNamePicker
          ui:autofocus: true
        description:
          title: Description
          type: string
          description: Help others understand what this website is for.
        system:
          title: System
          type: string
          description: System of the component
          ui:field: EntityPicker
          ui:options:
            allowedKinds:
              - System
            defaultKind: System 
        lifecycle:
          title: Lifecycle
          description: 'Application lifecycle'
          type: string
          default: experimental
          enum:
            - deprecated
            - experimental
            - production            
        type:
          title: Type
          description: 'Application type'
          type: string
          default: service
          enum:
            - service
            - website
            - library               
        owner:
          title: Owner
          type: string
          description: Owner of the component
          ui:field: OwnerPicker
          ui:options:
            allowedKinds:
              - Group

    - title: Choose a location
      required:
        - repoUrl
      properties:
        repoUrl:
          title: Repository Location
          type: string
          ui:field: RepoUrlPicker
          ui:options:
            allowedHosts:
              - github.com

    - title: Infrastructure
      properties:
        env:
          title: Environment
          description: 'Environment to create resources'
          type: string
          default: development
          enum:
            - development
            - staging
            - production           
        kube:
          title: Create Kubernetes App
          description: Checking this will also create a ArgoCD App
          type: boolean
          default: false         
        databaseArguments:
          title: Database Parameters
          type: object
          properties:
            create:
              title: Create Database
              description: Preconfigure a minimal rails app
              type: boolean
              default: false
            databaseType:
              title: Database Type
              description: Choose database type
              type: object          
              properties:
                type:
                  enum:
                  - MySQL
                  - Postgres 

        # database:
        #   title: Create Database
        #   description: Checking this will also create a Database
        #   type: boolean
        #   default: false               
        # databaseType:
        #   description: Choose database type
        #   type: object
        #   default: MySQL
        #   properties:
        #     type:
        #       enum:
        #       - MySQL
        #       - Postgres          
        # dryRun:
        #   title: Only perform a dry run, don't publish anything
        #   type: boolean
        #   default: false
          
  steps:
    - id: template
      name: Fetch Application Template
      action: fetch:template
      cookiecutterCompat: true
      input:
        url: https://github.com/diegoluisi/template-app-go
        #copyWithoutRender:
        #  - .github/workflows/*
        values:
          component_id: ${{ parameters.component_id }}
          system: ${{ parameters.system }}
          description: ${{ parameters.description }}
          destination: ${{ parameters.repoUrl | parseRepoUrl }}
          owner: ${{ parameters.owner }}
          lifecycle: ${{ parameters.lifecycle }}
          type: ${{ parameters.type }}

    - id: publish
      name: Publish Application
      action: publish:github
      if: ${{ parameters.dryRun !== true }}
      input:
        allowedHosts:
          - github.com
        description: This is ${{ parameters.component_id }}
        repoUrl: ${{ parameters.repoUrl }}
        defaultBranch: main
        repoVisibility: public

    - id: fetch-kube
      name: Fetch Kubernetes Templates
      action: fetch:template
      if: ${{ parameters.kube == true }}
      input:
        targetPath: ./kube
        url: https://github.com/diegoluisi/backstage-catalog/tree/main/devxp/skeleton/kubernetes/apps
        values:
          component_id: ${{ parameters.component_id }}
          description: ${{ parameters.description }}
          destination: ${{ parameters.repoUrl | parseRepoUrl }}
          owner: ${{ parameters.owner }}

    - id: kube-pr
      name: "Open PR in GitOps Repository"
      action: publish:github:pull-request
      if: ${{ parameters.kube == true }}
      input:
        repoUrl: github.com?repo=argo&owner=diegoluisi
        branchName: create-${{ parameters.component_id }}
        title: ':robot: [backstage-bot] Create new App ${{ parameters.component_id }}'
        description: |
          # New project: ${{ parameters.component_id }}
          ${{ parameters.description if parameters.description }}
        sourcePath: kube
        targetPath: apps

    - id: fetch-crossplane-rds
      name: Fetch Infrastructure Template
      action: fetch:template
      if: ${{ parameters.database == true }}
      input:
        targetPath: ./rds
        url: https://github.com/diegoluisi/backstage-catalog/tree/main/devxp/skeleton/crossplane/rds
        values:
          component_id: ${{ parameters.component_id }}
          description: ${{ parameters.description }}
          destination: ${{ parameters.repoUrl | parseRepoUrl }}
          owner: ${{ parameters.owner }}

    - id: crossplane-rds-pr
      name: Open PR for IAC Repository
      action: publish:github:pull-request
      if: ${{ parameters.database == true }}
      input:
        repoUrl: github.com?repo=crossplane-infra&owner=diegoluisi
        branchName: create-kube-${{ parameters.component_id }}
        title: ':robot: [backstage-bot] Create Kubernetes ${{ parameters.component_id }}'
        description: |
          # New project: ${{ parameters.component_id }}
          ${{ parameters.description if parameters.description }}
        sourcePath: rds
        targetPath: resources/aws/development/apps

    - id: register
      name: Register Application in Catalog
      action: catalog:register
      if: ${{ parameters.dryRun !== true }}
      input:
        repoContentsUrl: ${{ steps.publish.output.repoContentsUrl }}
        catalogInfoPath: "/catalog-info.yaml"

    # - name: Results
    #   if: ${{ parameters.dryRun }}
    #   action: debug:log
    #   input:
    #     listWorkspace: true

  output:
    links:
      - title: Go to Repository
        url: ${{ steps.publish.output.remoteUrl }}
      - title: Go to GitOps Pull Request
        url: ${{ steps.kube-pr.output.remoteUrl }}        
      - title: Open in catalog
        icon: catalog
        entityRef: ${{ steps.register.output.entityRef }}        