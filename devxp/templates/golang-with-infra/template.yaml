apiVersion: scaffolder.backstage.io/v1beta3
kind: Template
metadata:
  name: template-golang-with-infra
  title: Golang + Infra
  description: Create a new GoLang App and Infrastructure
  tags:
    - golang
    - infrastructure
    - recommended
spec:
  owner: group:engineering
  type: service

  parameters:
    - title: Provide some simple information
      required:
        - component_id
        - owner
        - env
      properties:
        component_id:
          title: Name
          type: string
          description: Unique name of the component
          ui:field: EntityNamePicker
          ui:autofocus: true
        description:
          title: Description
          type: string
          description: Help others understand what this website is for.
        env:
          title: Environment
          description: 'Environment to create resources'
          type: string
          default: development
          enum:
            - development
            - staging
            - production          
        owner:
          title: Owner
          type: string
          description: Owner of the component
          ui:field: OwnerPicker
          ui:options:
            allowedKinds:
              - Group

    - title: Choose a location
      required:
        - repoUrl
        - dryRun
      properties:
        repoUrl:
          title: Repository Location
          type: string
          ui:field: RepoUrlPicker
          ui:options:
            allowedHosts:
              - github.com
        dryRun:
          title: Only perform a dry run, don't publish anything
          type: boolean
          default: false

    - title: Infrastructure
      properties:     
        kube:
          title: Create Kubernetes App
          description: Checking this will also create a ArgoCD App
          type: boolean
          default: false
        rds:
          title: Create RDS
          description: Checking this will also create a RDS
          type: boolean
          default: false
          properties:
            line1:
              type: string
              name: Line 1

  steps:
    - id: template
      name: Fetch Skeleton + Template
      action: fetch:template
      cookiecutterCompat: true
      input:
        url: https://github.com/diegoluisi/template-app-go
        #copyWithoutRender:
        #  - .github/workflows/*
        values:
          component_id: ${{ parameters.component_id }}
          description: ${{ parameters.description }}
          destination: ${{ parameters.repoUrl | parseRepoUrl }}
          owner: ${{ parameters.owner }}

    - id: publish
      name: Publish
      action: publish:github
      if: ${{ parameters.dryRun !== true }}
      input:
        allowedHosts:
          - github.com
        description: This is ${{ parameters.component_id }}
        repoUrl: ${{ parameters.repoUrl }}
        defaultBranch: main
        repoVisibility: public

    - id: fetch-kube
      name: Fetch Kubernetes Templates
      action: fetch:template
      input:
        targetPath: ./kube
        url: https://github.com/diegoluisi/backstage-templates/tree/main/argo-cd/apps
        values:
          component_id: ${{ parameters.component_id }}
          description: ${{ parameters.description }}
          destination: ${{ parameters.repoUrl | parseRepoUrl }}
          owner: ${{ parameters.owner }}

    - id: kube-pr
      name: "Open Pull Request in Argo Repository"
      action: publish:github:pull-request
      if: ${{ parameters.kube == true }}
      input:
        repoUrl: github.com?repo=argo&owner=diegoluisi
        branchName: create-${{ parameters.component_id }}
        title: ':robot: [backstage-bot] Create new App ${{ parameters.component_id }}'
        description: |
          # New project: ${{ parameters.component_id }}
          ${{ parameters.description if parameters.description }}
        sourcePath: kube
        targetPath: apps

    - id: fetch-crossplane-rds
      name: Fetch Crossplane RDS Template
      action: fetch:template
      input:
        targetPath: ./rds
        url: https://github.com/diegoluisi/backstage-templates/tree/main/crossplane/rds
        values:
          component_id: ${{ parameters.component_id }}
          description: ${{ parameters.description }}
          destination: ${{ parameters.repoUrl | parseRepoUrl }}
          owner: ${{ parameters.owner }}

    - id: crossplane-rds-pr
      name: Open PR for Crossplane
      action: publish:github:pull-request
      if: ${{ parameters.rds == true }}
      input:
        repoUrl: github.com?repo=crossplane-infra&owner=diegoluisi
        branchName: create-kube-${{ parameters.component_id }}
        title: ':robot: [backstage-bot] Create Kubernetes ${{ parameters.component_id }}'
        description: |
          # New project: ${{ parameters.component_id }}
          ${{ parameters.description if parameters.description }}
        sourcePath: rds
        targetPath: resources/aws/development/apps

    - id: register
      name: Register
      action: catalog:register
      if: ${{ parameters.dryRun !== true }}
      input:
        repoContentsUrl: ${{ steps.publish.output.repoContentsUrl }}
        catalogInfoPath: "/catalog-info.yaml"

    # - name: Results
    #   if: ${{ parameters.dryRun }}
    #   action: debug:log
    #   input:
    #     listWorkspace: true

  output:
    links:
      - title: Go to Repository
        url: ${{ steps.publish.output.remoteUrl }}
      - title: Go to GitOps Pull Request
        url: ${{ steps.kube-pr.output.remoteUrl }}        
      - title: Open in catalog
        icon: catalog
        entityRef: ${{ steps.register.output.entityRef }}        