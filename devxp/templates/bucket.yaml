apiVersion: scaffolder.backstage.io/v1beta3
kind: Template
metadata:
  name: bucket-template
  title: S3 Bucket Template
  description: Create a S3 Bucket on AWS

  tags:
    - aws
    - s3
    - infrastructure
    - bucket
    - resource
spec:
  owner: group:sre-team
  type: resource

  parameters:
    - title: Provide some simple information
      required:
        - system
        - lifecycle
        - owner
      properties:
        system:
          title: System
          type: string
          description: System of the component
          ui:field: EntityPicker
          ui:options:
            allowedKinds:
              - System
            defaultKind: System
        # component:
        #   title: Component
        #   type: string
        #   description: Component to create resource
        #   ui:field: EntityPicker
        #   ui:options:
        #     allowedKinds:
        #       - Component
        #     defaultKind: Component
        owner:
          title: Owner
          type: string
          description: Owner of the component
          ui:field: OwnerPicker
          ui:options:
            allowedKinds:
              - Group
        lifecycle:
          title: Lifecycle
          description: 'Application lifecycle'
          type: string
          default: experimental
          enum:
            - deprecated
            - experimental
            - production


    - title: Infrastructure
      properties:
        env:
          title: Environment
          description: 'Environment to create resources'
          type: string
          default: dev
          enum:
            - dev
            - stg
            - prd
        bucket:
          title: bucket Parameters
          type: object
          default: Postgres
          properties:
            type:
              enum:
              - MySQL
              - Postgres
        dryRun:
          title: Only perform a dry run, don't publish anything
          type: boolean
          default: false
  steps:
    - id: fetch-template
      name: Fetch RDS Templates
      action: fetch:template
      if: ${{ parameters.dryRun == false }}
      input:
        targetPath: ./s3
        url: https://github.com/devxp-tech/backstage-catalog/tree/main/devxp/skeleton/crossplane/s3
        values:
          system: ${{ parameters.system }}
          owner: ${{ parameters.owner }}
          env: ${{ parameters.env }}

    - id: open-pr
      name: "Open PR in GitOps Repository"
      action: publish:github:pull-request
      if: ${{ parameters.dryRun == false }}
      input:
        repoUrl: github.com?repo=gitops&owner=devxp-tech
        branchName: create-${{ parameters.system }}-${{ parameters.env }}-s3
        title: ':robot: [backstage-bot] Create ${{ parameters.system }}-${{ parameters.env }}-s3'
        description: |
          # New project: ${{ parameters.system }}
          ${{ parameters.description if parameters.description }}
        sourcePath: s3
        targetPath: apps

    # - id: register
    #   name: Register Application in Catalog
    #   action: catalog:register
    #   if: ${{ parameters.dryRun !== true }}
    #   input:
    #     repoContentsUrl: ${{ steps.publish.output.repoContentsUrl }}
    #     catalogInfoPath: "/catalog-info.yaml"


    - name: Results
      if: ${{ parameters.dryRun }}
      action: debug:log
      input:
        listWorkspace: true

  output:
    links:
      - title: Go to GitOps Pull Request
        url: ${{ steps.open-pr.output.remoteUrl }}
      - title: Open in catalog
        icon: catalog
        entityRef: ${{ steps.register.output.entityRef }}